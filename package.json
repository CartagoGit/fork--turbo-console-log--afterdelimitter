{
  "name": "turbo-console-log-forked-by-cartago",
  "displayName": "Turbo Console Log - Fork by Cartago adding functionality",
  "description": "Automating the process of writing meaningful log messages.",
  "version": "2.6.201",
  "publisher": "CartagoNova",
  "engines": {
    "vscode": "^1.50.0"
  },
  "icon": "images/icon.png",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:turboConsoleLog.displayLogMessage",
    "onCommand:turboConsoleLog.commentAllLogMessages",
    "onCommand:turboConsoleLog.uncommentAllLogMessages",
    "onCommand:turboConsoleLog.deleteAllLogMessages"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Turbo Console Log Configuration",
      "properties": {
        "turboConsoleLog.wrapLogMessage": {
          "type": "boolean",
          "default": false,
          "description": "Determine if the log message should be wrapped or not."
        },
        "turboConsoleLog.logMessagePrefix": {
          "type": "string",
          "default": "üöÄ",
          "description": "The prefix of the log message."
        },
        "turboConsoleLog.hasMessagePrefix": {
          "type": "boolean",
          "default": "true",
          "description": "Show/hide prefix of the log message"
        },
        "turboConsoleLog.logMessageSubfix": {
          "type": "string",
          "default": "‚è©",
          "description": "The subfix of the log message before the variable."
        },
        "turboConsoleLog.hasMessageSubfix": {
          "type": "boolean",
          "default": "true",
          "description": "Show/hide subfix of the log message"
        },
        "turboConsoleLog.includeFileNameAndLineNum": {
          "type": "boolean",
          "default": true,
          "description": "Whether to include the file name and the line number of the log message."
        },
        "turboConsoleLog.addSemicolonInTheEnd": {
          "type": "boolean",
          "default": false,
          "description": "Whether to add or not a semicolon in the end of the log message."
        },
        "turboConsoleLog.insertEnclosingClass": {
          "type": "boolean",
          "default": true,
          "description": "Whether to insert or not the enclosing class of the selected variable in the log message."
        },
        "turboConsoleLog.insertEnclosingFunction": {
          "type": "boolean",
          "default": true,
          "description": "Whether to insert or not the enclosing function of the selected variable in the log message."
        },
        "turboConsoleLog.insertEmptyLineBeforeLogMessage": {
          "type": "boolean",
          "default": false,
          "description": "Whether to insert an empty line before the log message or not."
        },
        "turboConsoleLog.insertEmptyLineAfterLogMessage": {
          "type": "boolean",
          "default": false,
          "description": "Whether to insert an empty line after the log message or not."
        },
        "turboConsoleLog.delimiterInsideMessage": {
          "type": "string",
          "default": "‚ûΩ",
          "description": "The delimiter that will separate the different log message elements (file name, line number, class, function and variable)"
        },
        "turboConsoleLog.quote": {
          "type": "string",
          "enum": [
            "\"",
            "'",
            "`"
          ],
          "default": "\"",
          "description": "Double quotes, single quotes or backtick"
        },
        "turboConsoleLog.logType": {
          "type": "string",
          "enum": [
            "log",
            "warn",
            "error",
            "debug",
            "table"
          ],
          "default": "log",
          "description": "Select the log type"
        },
        "turboConsoleLog.logFunction": {
          "type": "string",
          "default": "log",
          "description": "Specify a log function (when specified logType will be ignored)"
        },
        "turboConsoleLog.delimitterPosition": {
          "type": "string",
          "enum": [
            "before",
            "after",
            "both",
            "none"
          ],
          "default": "before",
          "description": "It assigns the position of the delimitter between elements"
        } ,
        "turboConsoleLog.hasFilePrefix": {
          "type": "boolean",
          "default": true,
          "description": "Show/hide 'file' before the file name"
        }
      }
    },
    "commands": [
      {
        "command": "turboConsoleLog.displayLogMessage",
        "title": "Turbo Console Log: Display Log Message"
      },
      {
        "command": "turboConsoleLog.commentAllLogMessages",
        "title": "Turbo Console Log: Comment All Log Messages"
      },
      {
        "command": "turboConsoleLog.uncommentAllLogMessages",
        "title": "Turbo Console Log: Uncomment All Log Messages"
      },
      {
        "command": "turboConsoleLog.deleteAllLogMessages",
        "title": "Turbo Console Log: Delete All Log Messages"
      }
    ],
    "keybindings": [
      {
        "command": "turboConsoleLog.displayLogMessage",
        "key": "ctrl+alt+l",
        "mac": "ctrl+alt+l"
      },
      {
        "command": "turboConsoleLog.commentAllLogMessages",
        "key": "alt+shift+c",
        "mac": "alt+shift+c"
      },
      {
        "command": "turboConsoleLog.uncommentAllLogMessages",
        "key": "alt+shift+u",
        "mac": "alt+shift+u"
      },
      {
        "command": "turboConsoleLog.deleteAllLogMessages",
        "key": "alt+shift+d",
        "mac": "alt+shift+d"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish:win": "yarn run compile",
    "compile": "rm -rf out && tsc -p ./ && mkdir -p out/test/files/js && cp -r src/test/files/js out/test/files",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile",
    "test": "node ./out/test/runTest.js",
    "generateTest": "ts-node ./src/test/generator.ts",
    "generateTest:win": "ts-node ./src/test/generator.ts --fileName=runTestWin.js --testShortName=shortTestWin.js.js --testLongName=longTestWin.js",
    "vscode:prepublish": "yarn run compile:win",
    "compile:win": "rd /s /q out && tsc -p ./ && mkdir out\\test\\files\\js && copy src\\test\\files\\js out\\test\\files\\js",
    "pretest:win": "yarn run compile:win",
    "test:win": "node ./out/test/runTest.js",
    "precompile:vsix" : "tsc -p ./",
    "compile:vsix": "vsce package"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.186",
    "@types/mocha": "^8.0.0",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "chalk": "^4.1.0",
    "eslint": "^7.9.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^3.1.4",
    "glob": "^7.1.6",
    "mocha": "^8.1.3",
    "prettier": "^2.7.1",
    "ts-node": "^10.9.1",
    "typescript": "^4.0.2",
    "vscode-test": "^1.4.0"
  },
  "license": "SEE LICENSE IN LICENSE.txt",
  "bugs": {
    "url": "https://github.com/Chakroun-Anas/turbo-console-log/issues",
    "email": "chakroun.anas@outlook.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/CartagoGit/fork--turbo-console-log--afterdelimitter"
  },
  "__metadata": {
    "publisherDisplayName": "Cartago Nova",
    "publisherId": "CartagoNova",
    "isPreReleaseVersion": false
  },
  "dependencies": {
    "lodash": "^4.17.21"
  }
}
